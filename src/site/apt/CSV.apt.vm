  ----
  Comma Separated Values (CSV)
  ----
  Tolga Yilmaz;
  meta-description=Java libraries to read and write files in Comma Separated Value (CSV) format.;
  ----

Comma Separated Values (CSV)

  Utilities for reading and writing CSV (comma separated value) text files.

  The CSV parser classes take care of reading CSV files including: splitting out
  fields (even quoted and escaped fields), escaped data, line numbering, escape
  and comments.  Each  line of values can be returned as an array, or the values
  can be returned individually with the number of the line from which they came.

  The CSV printer classes take care of writing CSV files including determining
  if the data needs to be escaped.

  This utility supports two flavors of CSV:

    * UNIX style

      * backslash escape character for quotes (\"), new lines (\n), and
        backslashes (\\)

      * Each record must be on its own line.  If a field contains a new line,
        the new line must be escaped.

      * Leading and trailing white space on an unquoted field is ignored.

      * Compatible with standard unix text processing tools such as grep and sed
        that work on a line by line basis.

      * Reader: CSVParser, Writer: CSVPrinter

    * Microsoft Excel Style

      * Two quotes escape character ("" escapes "), no other characters are
        escaped.

      * Compatible with Microsoft Excel and many other programs that have adopted
        the format for data import and export.

      * Leading and trailing white space on an unquoted field is significant.

      * Specified by {{{http://tools.ietf.org/html/rfc4180}RFC4180}}.

      * Reader: ExcelCSVParser, Writer: ExcelCSVPrinter

  Note that for simple field data that does not contain quotes or new lines, the
  two formats are fairly equivalent.

Labeled CSV Parser

    * {{{./src/LabeledCSVParser.java.html}LabeledCSVParser.java Source Code}}

    * {{{./javadoc/LabeledCSVParser.html}LabeledCSVParser Javadoc}}

  Decorates either any flavor of CSV parser such that the first row read is a
  row of labels.  Data in each row can be read by column name.

*Example

%{code-snippet|brush=java|file=src/site/snippet/LabeledCSVParser.java.snippet}

CSV Parse (CSV Reader Interface)

    * {{{./src/CSVParse.java.html}CSVParse.java Source Code}}

    * {{{./javadoc/CSVParse.html}CSVParse Javadoc}}

  Common interface for either the UNIX style CSV reader (CSVParser) or the Excel style CSV reader
  (ExcelCSVParser).

*Example

%{code-snippet|brush=java|file=src/site/snippet/CSVParse.java.snippet}

CSV Print (CSV Writer Interface)

    * {{{./src/CSVPrint.java.html}CSVPrint.java Source Code}}

    * {{{./javadoc/CSVPrint.html}CSVPrint Javadoc}}

  Common interface for either the UNIX style CSV writer (CSVPrinter) or the Excel style CSV writer
  (ExcelCSVPrinter).

*Example

%{code-snippet|brush=java|file=src/site/snippet/CSVPrint.java.snippet}

CSV Printer (UNIX Style CSV Writer)

    * {{{./src/CSVPrinter.java.html}CSVPrinter.java Source Code}}

    * {{{./javadoc/CSVPrinter.html}CSVPrinter Javadoc}}

  This class makes it easy to output CSV.  Given values, it will automatically
  determine if they need to be quoted and escape special characters.  Comments
  can easily be written and system appropriate line beginnings will be added.

*Example

%{code-snippet|brush=java|file=src/site/snippet/CSVPrinter.java.snippet}

CSV Parser (UNIX Style CSV Reader)

    * {{{./src/CSVParser.java.html}CSVParser.java Source Code}}

    * {{{./javadoc/CSVParser.html}CSVParser Javadoc}}

  This class makes it easy to input CSV.  Given a stream, it will parse the
  stream and return the fields as strings, the lines as string arrays, or the
  whole file as a two dimensional string array.

*Example

%{code-snippet|brush=java|file=src/site/snippet/CSVParser.java.snippet}

Excel CSV Printer (Microsoft Excel Style CSV Writer)

    * {{{./src/ExcelCSVPrinter.java.html}ExcelCSVPrinter.java Source Code}}

    * {{{./javadoc/ExcelCSVPrinter.html}ExcelCSVPrinter Javadoc}}

*Example

%{code-snippet|brush=java|file=src/site/snippet/CsvExcelPrinter.java.snippet}

Excel CSV Parser (Microsoft Excel Style CSV Reader)

    * {{{./src/ExcelCSVParser.java.html}ExcelCSVParser.java Source Code}}

    * {{{./javadoc/ExcelCSVParser.html}ExcelCSVParser Javadoc}}

*Example

%{code-snippet|brush=java|file=src/site/snippet/CsvExcelParser.java.snippet}

CSV Character Sets

  Several people have asked how to read CSV files that are in other character
  sets such as Chinese or Japanese.  To parse such files, use the parser
  constructor that takes a reader. Make sure the reader has been initialized
  to read the correct character set.  The following example reads Simplified
  Chinese (charset GB2312) CSV values from
  {{{./CSVCharsetTest.gb2312csv}CSVCharsetTest.gb2312csv}} If you have a Chinese
  font installed and Java is set up to use it, the example will show a dialog
  with each of the Chinese words on it.

*Example

%{code-snippet|brush=java|file=src/site/snippet/CSVCharset.java.snippet}

CSV Lexer

    * {{{./src/CSVLexer.lex.html}CSVLexer.lex Source Code}}

    * {{{./javadoc/CSVLexer.html}CSVLexer Javadoc}}

  The lexer (CSVLexer) created using {{{http://www.jflex.de/}JFlex}} is still
  available in the download and is still supported.  In fact,  CSVParser uses
  it behind the scenes.  However, CSVParser has a much cleaner, full-featured
  API and its use is recommended.

Links

*-----*------*-----*
Author | License | Features
*-----*------*-----*
Tolga Yilmaz {{{http://64bitlabs.com/utils/CSV.html}64bitlabsutils CSV and ExcelCSV for Java}} | Open source, GPL | Parses CSV streams into Java Strings or arrays of Strings.
*-----*------*-----*
Bytecode Pty Ltd. {{{http://opencsv.sourceforge.net/}opencsv}} | Open source, Apache licence | Parses CSV files into Java Strings or arrays of Strings.
*-----*------*-----*
Ricebridge {{{http://www.ricebridge.com/products/csvman/}CSV Manager}} | Commercial, with various license price points. | Parses CSV streams with callback methods when data is found. Single CSV parsing class can be
configured to parse standard CSV, Excel CSV, or other user specified variants.
*-----*------*-----*
E.Allen Soard {{{http://sourceforge.net/projects/javacsv/} Java CSV Library}} | Open source, LGPL | Parses CSV files into Java objects contained entirely in memory.
*-----*------*-----*
Nilo de Roock {{{http://xlsql.sourceforge.net/}xlSQL }} | Open source, GPL | Provides a JDBC interface for accessing CSV files.
*-----*------*-----*
Bruce Dunwiddie {{{http://www.csvreader.com/}CsvReader }} | Commercial, with various license price points. | Reads CSV files one line at a time and values may be obtained by name (similar to LabeledCSVParser) or by index. Single CSV parsing class can be configured to parse standard CSV, Excel CSV, or other user specified variants. A .Net version of the parser is also available.
*-----*------*-----*
Roedy Green {{{http://mindprod.com/jgloss/csv.html}Mindprod CSV}} | Open source, freeware (except military) | CSV definition and libraries.
*-----*------*-----*
